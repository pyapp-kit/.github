name: Reusable CI

on:
  workflow_call:
    inputs:
      python_version:
        required: false
        type: string
        default: "3.x"
      os:
        required: false
        type: string
        default: ubuntu-latest
      extras:
        required: false
        type: string
        default: "test"
      pip-install-flags:
        required: false
        type: string
        default: ""
        description: "Flags to pass to pip install. Can be used for --editable, --pre, --no-deps, etc."
      qt:
        required: false
        type: string
        default: ""
      fetch-depth:
        required: false
        type: number
        default: 1
        description: "The number of commits to fetch. 0 indicates all history for all branches and tags."
      python-cache-dependency-path:
        required: false
        type: string
        default: "pyproject.toml"
      pytest-args:
        required: false
        type: string
        default: ""
        description: "Arguments to pass to pytest. Can be used for -k, -m, -x, etc."
      pytest-cov-flags:
        required: false
        type: string
        default: "--cov --cov-report=xml --cov-report=term-missing"
        description: "Flags to pass to pytest-cov. Can be used for --cov-fail-under, --cov-branch, etc."

jobs:
  test:
    name: ${{ inputs.os }} py${{ inputs.python_version }} ${{ inputs.qt }}
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
          cache-dependency-path: ${{ inputs.python-cache-dependency-path }}
          cache: "pip"

      - name: Setup Qt Libraries
        if: ${{ inputs.qt != '' }}
        uses: tlambert03/setup-qt-libs@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ${{ inputs.pip-install-flags }} .[${{ inputs.extras }}]

      - name: Run tests
        if: ${{ inputs.qt != '' }}
        run: python -m pytest --color=yes ${{ inputs.pytest-cov-flags }} ${{ inputs.pytest-args }}

      - name: Run (headless) tests
        if: ${{ inputs.qt == '' }}
        uses: aganders3/headless-gui@v1
        with:
          run: python -m pytest --color=yes ${{ inputs.pytest-cov-flags }} ${{ inputs.pytest-args }}

      - name: Coverage
        if: ${{ inputs.pytest-cov-flags != '' }}
        uses: codecov/codecov-action@v3
